"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[74210],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>u,MDXProvider:()=>d,mdx:()=>f,useMDXComponents:()=>p,withMDXComponents:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){return function(t){var n=p(t.components);return r.createElement(e,o({},t,{components:n}))}},p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,v=c["".concat(l,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(v,s(s({ref:t},u),{},{components:n})):r.createElement(v,s({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=v;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var r=n(67294),a=n(34334);const o="tabItem_Ymn6";function l(e){var t=e.children,n=e.hidden,l=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:n},t)}},65488:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var r=n(83117),a=n(67294),o=n(34334),l=n(72389),s=n(67392),i=n(7094),u=n(12466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,n,l=e.lazy,d=e.block,m=e.defaultValue,v=e.values,f=e.groupId,h=e.className,g=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=v?v:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),x=(0,s.l)(y,(function(e,t){return e.value===t.value}));if(x.length>0)throw new Error('Docusaurus error: Duplicate values "'+x.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===m?m:null!=(t=null!=m?m:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:g[0].props.value;if(null!==b&&!y.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,i.U)(),C=w.tabGroupChoices,T=w.setTabGroupChoices,N=(0,a.useState)(b),O=N[0],k=N[1],j=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var S=C[f];null!=S&&S!==O&&y.some((function(e){return e.value===S}))&&k(S)}var I=function(e){var t=e.currentTarget,n=j.indexOf(t),r=y[n].value;r!==O&&(E(t),k(r),null!=f&&T(f,String(r)))},R=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r,a=j.indexOf(e.currentTarget)+1;n=null!=(r=j[a])?r:j[0];break;case"ArrowLeft":var o,l=j.indexOf(e.currentTarget)-1;n=null!=(o=j[l])?o:j[j.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},h)},y.map((function(e){var t=e.value,n=e.label,l=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:function(e){return j.push(e)},onKeyDown:R,onFocus:I,onClick:I},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":O===t})}),null!=n?n:t)}))),l?(0,a.cloneElement)(g.filter((function(e){return e.props.value===O}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function m(e){var t=(0,l.default)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},95266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>v});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),l=n(86341),s=n(65488),i=n(85162),u=["components"],c={id:"context",title:"Context",slug:"/guides/relay-resolvers/context",description:"Context in Relay Resolvers"},p=void 0,d={unversionedId:"guides/relay-resolvers/context",id:"version-v18.0.0/guides/relay-resolvers/context",title:"Context",description:"Context in Relay Resolvers",source:"@site/versioned_docs/version-v18.0.0/guides/relay-resolvers/context.md",sourceDirName:"guides/relay-resolvers",slug:"/guides/relay-resolvers/context",permalink:"/docs/guides/relay-resolvers/context",draft:!1,editUrl:"https://github.com/facebook/relay/tree/main/website/versioned_docs/version-v18.0.0/guides/relay-resolvers/context.md",tags:[],version:"v18.0.0",frontMatter:{id:"context",title:"Context",slug:"/guides/relay-resolvers/context",description:"Context in Relay Resolvers"},sidebar:"docs",previous:{title:"Field Arguments",permalink:"/docs/guides/relay-resolvers/field-arguments/"},next:{title:"Derived Fields",permalink:"/docs/guides/relay-resolvers/derived-fields/"}},m={},v=[{value:"Setup",id:"setup",level:2},{value:"Usage in Resolvers",id:"usage-in-resolvers",level:2},{value:"Type Checking",id:"type-checking",level:2}],f={toc:v};function h(e){var t=e.components,n=(0,a.Z)(e,u);return(0,o.mdx)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"In order to pass a service, or other values to be shared with all resolvers, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"LiveResolverStore")," provides a means of passing context. This gets passed to the third argument of all resolvers (live and non-live). This context argument analogous to the ",(0,o.mdx)("a",{parentName:"p",href:"https://graphql.org/learn/execution/#root-fields--resolvers"},"context argument")," used on the server which usually holds things like the database connection."),(0,o.mdx)("h2",{id:"setup"},"Setup"),(0,o.mdx)("p",null,"In order to pass context to live resolvers, pass a ",(0,o.mdx)("inlineCode",{parentName:"p"},"resolverContext")," argument to the initialization of ",(0,o.mdx)("inlineCode",{parentName:"p"},"LiveResolverStore")," before creating the environment:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"const store = new LiveResolverStore(source, {\n  resolverContext: {\n    store: customStore,\n  },\n});\n")),(0,o.mdx)("h2",{id:"usage-in-resolvers"},"Usage in Resolvers"),(0,o.mdx)(s.default,{groupId:"resolver",defaultValue:"JavaScript",values:(0,l.fbContent)({internal:[{label:"JavaScript",value:"JavaScript"},{label:"Flow",value:"Flow"}],external:[{label:"JavaScript",value:"JavaScript"},{label:"Flow",value:"Flow"}]}),mdxType:"Tabs"},(0,o.mdx)(i.default,{value:"JavaScript",mdxType:"TabItem"},(0,o.mdx)("p",null,"The last argument in a resolver will contain the context type which contains the value passed into the store on initialization. If the resolver is on a model type or reads a ",(0,o.mdx)("inlineCode",{parentName:"p"},"@rootFragment"),", the context value will be the third argument. If the resolver is ",(0,o.mdx)("em",{parentName:"p"},"not")," on a model type and does ",(0,o.mdx)("em",{parentName:"p"},"not")," read a ",(0,o.mdx)("inlineCode",{parentName:"p"},"@rootFragment")," the context value will be passed as the thrid argument. Relay's generated artifacts will include generated type assertions to check that your resolver is typed correctly."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"import type { LiveState } from 'relay-runtime';\n\n/**\n * @RelayResolver Query.counter: Int\n * @live\n */\nexport function counter(\n  _args,\n  context\n) {\n  return {\n    read: () => context.store.getState().counter,\n    subscribe: (callback) => {\n      return context.store.subscribe(callback);\n    },\n  };\n}\n"))),(0,o.mdx)(i.default,{value:"Flow",mdxType:"TabItem"},(0,o.mdx)("p",null,"Context is not currently supported in Flow"))),(0,o.mdx)("h2",{id:"type-checking"},"Type Checking"),(0,o.mdx)("p",null,"In order to ensure that the resolver is implemented with the correct types, pass a ",(0,o.mdx)("inlineCode",{parentName:"p"},"resolverContextType")," in the project config. This parameter expects a type name and a ",(0,o.mdx)("inlineCode",{parentName:"p"},"path")," to import from:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "project",\n    "language": "flow",\n    "resolverContextType": {\n        "name": "IResolverContextType",\n        "path": "path/to/file/IResolverContextType"\n    }\n}\n')),(0,o.mdx)("p",null,"To import from a package, use the following syntax for a ",(0,o.mdx)("inlineCode",{parentName:"p"},"package")," import:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "project",\n    "language": "flow",\n    "resolverContextType": {\n        "name": "IResolverContextType",\n        "package": "@package/name"\n    }\n}\n')))}h.isMDXComponent=!0}}]);